package edu.virginia.cs2110;

import android.os.Bundle;
import android.app.Activity;
import android.content.Intent;
import android.view.Menu;
import android.view.View;

/**
 * the activity for the game menu (always going)
 * 
 * any code not sourced is derived from the android api guide or skills learned in class
 * @author Augustus Logsdon(acl3qb) and Charlotte Blais(ccb7wb) and Piotr Gregrowski(pzg5sj) and Carina Cai(yc5bd)
 *
 */
public class MainActivity extends Activity {

	@Override
	/**
	 * main activity 
	 * 
	 * starts playing music in the application context
	 * http://stackoverflow.com/questions/4521682/preventing-skipping-or-lag-when-adding-music-to-android-game
	 */
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }

    @Override
    /**
     * autogenerated options menu, not actually used since the layout theme has no actionbar.
     */
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }
    
    /**
     * called by a button that starts an easy game
     * @param v
     */
    public void startLevel1(View v) {
    	this.startGame(1);
    }
    
    /**
     * called by a button that starts a medium game
     * @param v
     */
    public void startLevel2(View v) {
    	this.startGame(2);
    }
    
    /**
     * called by a button that starts a hard game
     * @param v
     */
    public void startLevel3(View v) {
    	this.startGame(3);
    }

    /**
     * creates an intent of a Game activity placed on top of the main activity
     * 
     * @param difficulty the difficulty level of the game intent (number of ghosts in the game save)
     */
    public void startGame(int difficulty) {
    	Intent newGame = new Intent(MainActivity.this, GameActivity.class);
    	newGame.putExtra("ghosts", difficulty); //Optional parameters
    	MainActivity.this.startActivity(newGame);
    }
    
    /**
     * changes the layout to show the story and directions
     * @param v
     */
    public void showStory(View v) {
    	setContentView(R.layout.story_layout);
    }
    
    /**
     * switches the layout back to the way it started when the user presses a button
     * @param v
     */
    public void closeStory(View v) {
        setContentView(R.layout.activity_main);
    }
}
